version: '3.5'

services: 
    # shop_server:
    #     image: node
    #     working_dir: /home/node/app
    #     command: npm config set registry https://registry.npm.taobao.org
    #     command: npm run start:dev
    #     volumes: 
    #         - .:/home/node/app
    #     ports: 
    #         - ${APP_PORT}:3000
    #     depends_on: 
    #         - db
    #         - cache
    #     networks: 
    #         - backend
    #         - fronted
    mysql:
        image: mysql:${MYSQL_VERSION}
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always
        ports: 
            - ${MYSQL_PORT}:3306
        volumes: 
            - ${MYSQL_DATADIR}:/var/lib/mysql
            - ${MYSQL_CONFDIR}:/etc/mysql/conf.d
        environment: 
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        networks:
            - backend
    # pg:
    #     image: postgres:13
    #     restart: always
    #     ports: 
    #         - 5432:5432
    #     volumes: 
    #         - ./docker_volumes/data/pg:/var/lib/postgresql/data
    #     environment:
    #         POSTGRES_USER: root
    #         POSTGRES_PASSWORD: 123456
    #         POSTGRES_DB: shop

    sonic:
        image: valeriansaliou/sonic:v1.3.0
        restart: always
        ports: 
            - 1491:1491
        volumes: 
            - ./docker_volumes/data/sonic/config.cfg:/etc/sonic.cfg
            - ./docker_volumes/data/sonic/store/:/var/lib/sonic/store/
    rabbitmq:
        image: rabbitmq:3.8.5-management
        container_name: rabbitmq
        restart: always
        hostname: rabbitmq
        volumes:
            - ./docker_volumes/data/rabbitmq/etc/:/etc/rabbitmq/
            - ./docker_volumes/data/rabbitmq/data/:/var/lib/rabbitmq/
            - ./docker_volumes/data/rabbitmq/logs/:/var/log/rabbitmq/
        environment:
            RABBITMQ_DEFAULT_USER: rabbitmq
            RABBITMQ_DEFAULT_PASS: 123456
        ports:
            - 5672:5672
            - 15672:15672

    redis:
        image: redis
        restart: always
        ports: 
            - ${REDIS_PORT}:6379
        volumes: 
            - ${REDIS_DATADIR}:/data
            # - ${REDIS_CONFFILE}:/usr/local/etc/redis/redis.conf
        networks: 
            - backend

networks:
    # fronted:
    #     driver: bridge
    backend:
        driver: bridge
